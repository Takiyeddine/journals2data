"""
This type stub file was generated by pyright.
"""

"""
Stopword extraction and stopword classes.
"""
__title__ = ...
__author__ = ...
__license__ = ...
__copyright__ = ...
TABSSPACE = ...
def innerTrim(value): # -> str:
    ...

class WordStats:
    def __init__(self) -> None:
        ...
    
    def get_stop_words(self): # -> list[Unknown]:
        ...
    
    def set_stop_words(self, words): # -> None:
        ...
    
    def get_stopword_count(self): # -> int:
        ...
    
    def set_stopword_count(self, wordcount): # -> None:
        ...
    
    def get_word_count(self): # -> int:
        ...
    
    def set_word_count(self, cnt): # -> None:
        ...
    


class StopWords:
    TRANS_TABLE = ...
    _cached_stop_words = ...
    def __init__(self, language=...) -> None:
        ...
    
    def remove_punctuation(self, content):
        ...
    
    def candidate_words(self, stripped_input):
        ...
    
    def get_stopword_count(self, content): # -> WordStats:
        ...
    


class StopWordsChinese(StopWords):
    """Chinese segmentation
    """
    def __init__(self, language=...) -> None:
        ...
    
    def candidate_words(self, stripped_input): # -> Generator[str | Unknown, None, None]:
        ...
    


class StopWordsArabic(StopWords):
    """Arabic segmentation
    """
    def __init__(self, language=...) -> None:
        ...
    
    def remove_punctuation(self, content):
        ...
    
    def candidate_words(self, stripped_input): # -> list[Unknown]:
        ...
    


class StopWordsKorean(StopWords):
    """Korean segmentation
    """
    def __init__(self, language=...) -> None:
        ...
    
    def get_stopword_count(self, content): # -> WordStats:
        ...
    


class StopWordsHindi(StopWords):
    """Hindi segmentation
    """
    def __init__(self, language=...) -> None:
        ...
    
    def get_stopword_count(self, content): # -> WordStats:
        ...
    


class StopWordsJapanese(StopWords):
    """Japanese segmentation
    """
    def __init__(self, language=...) -> None:
        ...
    
    def candidate_words(self, stripped_input): # -> list[Unknown]:
        ...
    


