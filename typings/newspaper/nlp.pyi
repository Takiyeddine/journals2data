"""
This type stub file was generated by pyright.
"""

"""
Anything natural language related should be abstracted into this file.
"""
__title__ = ...
__author__ = ...
__license__ = ...
__copyright__ = ...
ideal = ...
stopwords = ...
def load_stopwords(language): # -> None:
    """ 
    Loads language-specific stopwords for keyword selection
    """
    ...

def summarize(url=..., title=..., text=..., max_sents=...): # -> list[Unknown]:
    ...

def score(sentences, titleWords, keywords): # -> Counter[Unknown]:
    """Score sentences based on different features
    """
    ...

def sbs(words, keywords): # -> float | Literal[0]:
    ...

def dbs(words, keywords): # -> float | Literal[0]:
    ...

def split_words(text): # -> list[str] | None:
    """Split a string into array of words
    """
    ...

def keywords(text): # -> dict[Unknown, Unknown]:
    """Get the top 10 keywords and their frequency scores ignores blacklisted
    words in stopwords, counts the number of occurrences of each word, and
    sorts them in reverse natural order (so descending) by number of
    occurrences.
    """
    ...

def split_sentences(text): # -> list[Unknown | _UrlopenRet]:
    """Split a large string into sentences
    """
    ...

def length_score(sentence_len): # -> float:
    ...

def title_score(title, sentence): # -> float | Literal[0]:
    ...

def sentence_position(i, size): # -> float | Literal[0]:
    """Different sentence positions indicate different
    probability of being an important sentence.
    """
    ...

